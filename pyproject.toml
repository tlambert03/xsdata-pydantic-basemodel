# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "xsdata-pydantic-basemodel"
description = "xsdata pydantic plugin using BaseModel"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD 3-Clause License" }
authors = [
    { email = "talley.lambert@gmail.com", name = "Talley Lambert" },
    { email = "chris@komposta.net", name = "Christodoulos Tsoulloftas" },

]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Markup :: XML",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = ['pydantic', 'xsdata>=22.9']

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
cli = ["xsdata[cli]>=22.4"]
lxml = ["lxml>=4.4.1"]
test = ["pytest>=6.0", "pytest-cov", "lxml", "xsdata[cli]>=22.4"]
dev = [
    "black",
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "rich",
    "ruff",
]

[project.urls]
homepage = "https://github.com/tlambert03/xsdata-pydantic-basemodel"
repository = "https://github.com/tlambert03/xsdata-pydantic-basemodel"

# same as console_scripts entry point
# [project.scripts]
# spam-cli = "spam:main_cli"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
[project.entry-points."xsdata.plugins.class_types"]
xsdata_pydantic_basemodel = "xsdata_pydantic_basemodel.hooks.class_type"
[project.entry-points."xsdata.plugins.cli"]
xsdata_pydantic_basemodel = "xsdata_pydantic_basemodel.hooks.cli"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# https://hatch.pypa.io/latest/config/build/#file-selection
[tool.hatch.build.targets.sdist]
include = ["src", "tests"]

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
]


[tool.ruff.per-file-ignores]
"tests/*.py" = ["S"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
]

[tool.coverage.run]
source = ["src"]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
]
